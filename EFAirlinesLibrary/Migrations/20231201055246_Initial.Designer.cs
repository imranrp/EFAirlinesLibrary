// <auto-generated />
using System;
using EFAirlinesLibrary.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFAirlinesLibrary.Migrations
{
    [DbContext(typeof(WellsFargoAirlinesDBContext))]
    [Migration("20231201055246_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFAirlinesLibrary.Models.Flight", b =>
                {
                    b.Property<string>("FlightNo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("FromCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ToCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("FlightNo");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.FlightSchedule", b =>
                {
                    b.Property<string>("FlightNo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ArriveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("FlightNo", "TravelDate");

                    b.ToTable("FlightSchedule");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.ReservationDetail", b =>
                {
                    b.Property<string>("PNRNo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("PassengerNo")
                        .HasColumnType("int");

                    b.Property<short?>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PNRNo", "PassengerNo");

                    b.ToTable("ReservationDetail");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.ReservationMaster", b =>
                {
                    b.Property<string>("PNRNo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("FlightNo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int?>("NoOfPassengers")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TravelDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PNRNo");

                    b.HasIndex("FlightNo", "TravelDate");

                    b.ToTable("ReservationMaster");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.FlightSchedule", b =>
                {
                    b.HasOne("EFAirlinesLibrary.Models.Flight", "Flight")
                        .WithMany("FlightSchedules")
                        .HasForeignKey("FlightNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.ReservationDetail", b =>
                {
                    b.HasOne("EFAirlinesLibrary.Models.ReservationMaster", "ReservationMaster")
                        .WithMany("ReservationDetails")
                        .HasForeignKey("PNRNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservationMaster");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.ReservationMaster", b =>
                {
                    b.HasOne("EFAirlinesLibrary.Models.FlightSchedule", "FlightSchedule")
                        .WithMany("ReservationMasters")
                        .HasForeignKey("FlightNo", "TravelDate");

                    b.Navigation("FlightSchedule");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.Flight", b =>
                {
                    b.Navigation("FlightSchedules");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.FlightSchedule", b =>
                {
                    b.Navigation("ReservationMasters");
                });

            modelBuilder.Entity("EFAirlinesLibrary.Models.ReservationMaster", b =>
                {
                    b.Navigation("ReservationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
